% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tally_delimited_string.R
\name{tally_delimited_string}
\alias{tally_delimited_string}
\title{Tally delimited string}
\usage{
tally_delimited_string(
  x,
  col,
  delim = ",",
  count = FALSE,
  names_repair = TRUE,
  squish = TRUE,
  names_prefix = NULL,
  ignore = c(NA, ""),
  keep = NULL,
  other_suffix = "other",
  other_tally_suffix = "n_other"
)
}
\arguments{
\item{x}{A data-frame, tibble or similar}

\item{col}{\if{html}{\out{<dynamic>}} The character column to tally}

\item{delim}{The delimiter that separates elements of the string column, passed to \link[tidyr]{separate_longer_delim}. A fixed string by default, use \link[stringr]{regex} to split in other ways.}

\item{count}{TRUE/FALSE. Should items in strings be counted or just marked as present/missing? These options respectively result in new columns being integer or logical type.}

\item{names_repair}{A logical indicating whether or not to repair new column names with \link[janitor]{make_clean_names}, or an alternative function for name repair. Names are repaired prior to prefixing.}

\item{squish}{Should delimited elements be 'squished' with \link[stringr]{str_squish}?}

\item{names_prefix}{Prefix for names of new columns. If NULL (the default), the name of \code{col} is used.}

\item{ignore}{Values within string column to ignore. The defaults result in expected behaviour.}

\item{keep}{A character vector of delineated items to tally. Ignored if \code{NULL} (the default).  Values outside of these are concatenated into a single string and reported in a separate column.}

\item{other_suffix}{The prefix with which to name the column containing concatenated strings of all values not in \code{keep} when \code{keep} is not \code{NULL}. If this argument is set to \code{NA}, the column is dropped.}

\item{other_tally_suffix}{The prefix with which to name the column containing the count of all the values not in \code{keep} when \code{keep} is not \code{NULL}. If this argument is set to \code{NA}, the column is dropped}
}
\value{
A data-frame-like object of the same type as \code{x}
}
\description{
Expand a delimited string column into columns that tally each instance of every observed delimited value.
}
\examples{
df <- data.frame(name = c("anna", "betty"),
              fruits = c("apple, banana", "pear, banana, banana"))

tally_delimited_string(df, fruits)

tally_delimited_string(df, fruits, count = TRUE)

tally_delimited_string(df, fruits, count = TRUE, names_repair = toupper)

tally_delimited_string(df, fruits, keep = c("apple", "banana"))

}
